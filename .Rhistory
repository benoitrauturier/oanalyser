devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp('inst/app')
library(lubridate)
library(tidyverse)
3600 %>% date()
3600 %>% as.hms()
library(hms)
3600 %>% as.hms()
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp('inst/app')
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp('inst/app')
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp('inst/app')
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp('inst/app')
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp('inst/app')
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp('inst/app')
?dateInput
install.packages("shinyTimes")
install.packages("shinyTime")
library(shinyTime)
?timeInput*
?timeInput
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp('inst/app')
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp('inst/app')
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp('inst/app')
?numericInput
devtools::use_package("shinyTime")
?numericInput
install.packages("shinyWidgets")
library(shinyWidgets)
devtools::use_package("shinyWidgets")
?radioGroupButtons
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp('inst/app')
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp('inst/app')
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp('inst/app')
?textAreaInput
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp('inst/app')
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp('inst/app')
c(1:10)
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp('inst/app')
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp('inst/app')
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp('inst/app')
getwd()
getwd()
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE)
getwd()
shiny::runApp()
oanalyser::get_intercontrols()
is.integer(20)
is.numeric(20)
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp()
is.numeric(20)
oanalyser::get_intercontrols()
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp()
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp()
devtools::use_data()
usethis::use_data()
usethis::use_data-raw()
usethis::use_data_raw()
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp()
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp()
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp()
getwd()
getwd()
test <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
test <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
test <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
test <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
test <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
test <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
test <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
test <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
test <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
test <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
test <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
test <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
test <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
test <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
usethis::use_data()
usethis::use_data(config/mistakes_types.yml)
?use_data
usethis::use_package("yaml")
mistakes_types <- yaml::read_yaml("config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data_raw/config/mistakes_types.yml")
getwd()
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
usethis::use_data(mistakes_types)
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
mistakes_types <- yaml::read_yaml("config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
usethis::use_data(mistakes_types)
usethis::use_data(mistakes_types, overwrite = T)
View(mistakes_types)
View(mistakes_types)
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
test <- mistakes_types
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")
mistakes_types <- yaml::read_yaml("data-raw/config/mistakes_types.yml")[[1]]
?vapply(list, function, FUN.VALUE = type, ...)
?vapply
mistakes_en <- sapply(mistakes_names, function(x) x$name_en)
mistakes_names <- yaml::read_yaml("data-raw/config/mistakes_types.yml")[[1]]
mistakes_en <- sapply(mistakes_names, function(x) x$name_en)
mistake_names %>% as.data.frame()
mistake_names %>% ldply(data.frame)
mistakes_names %>% ldply(data.frame)
mistakes_names %>% plyr::ldply(data.frame)
usethis::use_package("plyr")
mistakes_df <- plyr::ldply(mistakes_names, data.frame)
usethis::use_data(mistakes_types, overwrite = T)
test <-  readRDS("data/mistakes_types.rda")
usethis::use_data(mistakes_df, overwrite = T)
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
library(oanalyser)
mistakes_df
?checkboxGroupInput
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
mistakes_df$name_en
mistakes_df$.id
fluidPage(
fluidRow(uiOutput("intercontrols_radio")),
fluidRow(checkboxGroupInput("mitsakes_types", label = h3("Mistakes committed"), choiceNames = mistakes_df$name_en, choiceValues = mistakes_df$.id))
)
uiOutput("intercontrols_radio")
checkboxGroupInput("mitsakes_types", label = h3("Mistakes committed"), choiceNames = mistakes_df$name_en, choiceValues = mistakes_df$.id)
fluidPage(
fluidRow(uiOutput("intercontrols_radio")),
fluidRow(checkboxGroupInput("mitsakes_types", label = h3("Mistakes committed"), choiceNames = mistakes_df[["name_en"]], choiceValues = mistakes_df[[".id"]]))
)
fluidPage(
fluidRow(uiOutput("intercontrols_radio")),
fluidRow(checkboxGroupInput("mitsakes_types", label = h3("Mistakes committed"), choiceNames = c("aa", "bb"), choiceValues = c("djjd","slmml")))# mistakes_df$name_en mistakes_df$.id
)
mistakes_df$.id
mistakes_df$name_en
fluidPage(
fluidRow(uiOutput("intercontrols_radio")),
fluidRow(checkboxGroupInput("mitsakes_types", label = h3("Mistakes committed"), choiceNames = as.character(mistakes_df$name_en), choiceValues = mistakes_df$.id))
)
?ldply
mistakes_names <- yaml::read_yaml("data-raw/config/mistakes_types.yml")[[1]]
mistakes_df <- plyr::ldply(mistakes_names, function(x) data.frame(x, stringsAsFactors = F))
usethis::use_data(mistakes_df, overwrite = T)
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
source('inst/dev/run_dev.R')
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
