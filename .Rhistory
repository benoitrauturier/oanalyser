devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
comp_in''
comp_in()
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
?eventReactive
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
comp_in()
comp_in
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
comp_in
comp_in()
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
input
input$competition_name
comp_in()
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
comp_in()
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
mod_push_analyse <- function(){
uiOutput("push_result")
}
setup <- function(input, output, session){
return(input)
}
mod_get_push_button <- function(input,
output,
session){
observeEvent(input$mistake_submitted, {
output$push_result <- renderUI({
fluidRow(column(4,
actionButton(inputId = "push_result",
label = "Register race")))
})
})
}
mod_push_to_db <- function(input,
output,
session,
is_pushed,
comp_in){
#rv_push <- reactiveValues(data_race = comp_params)
observeEvent(is_pushed(),{
browser()
df_race <- data.frame(name = comp_in()$race_params$competition_name,
place = comp_in()$race_params$competition_place,
map = "",
lon = "",
lat ="",
date = comp_in()$race_params$competition_date,
race_type_id = comp_params()$race_params$course_type
)
print(df_race)
})
}
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
comp_in
comp_in()
comp_in
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
comp_in()
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
comp_in()
comp_in()$
ss
comp_in()
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
comp_in()
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
comp_in()
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
# This script allow you to quick clean your R session
# update documentation and NAMESPACE, localy install the package
# and run the main shinyapp from 'inst/app'
.rs.api.documentSaveAll() # close and save all open file
try(suppressWarnings(lapply(paste("package:", names(sessionInfo()$otherPkgs), sep = ""),
detach, character.only = TRUE, unload = TRUE)), silent = TRUE)
rm(list=ls(all.names = TRUE))
devtools::document('.')
devtools::load_all('.')
options(app.prod=FALSE) # TRUE = production mode, FALSE = development mode
shiny::runApp("inst/app")
input
input_val()
input()
input()$competition_nale
input()$competition_name
input()
input()()
input_val
input_val$competion_name
input_val$parent
input_val$overrides
input_val$parent
input_val$
d
input_val
input
input$ddd
val_comp_param()
input_val()
input_val$overrides
input_val$overrides()
input_val$parent()
